{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 1. Code structure\
\
The codes consists of 7 scripts and 4 functions, they\'92re all written by myself. Two referenced library \'93vl_slic\'94 and \'93rgb2Lab\'94 are not included in the codes. Main functions are as follows:\
\
7 scripts:\
\
	step_1: preparation for background saliency estimation, i.e. loading image, weight matrix wij, array di, etc.\
\
	step_2: erroneous boundary removal\
\
	step_3: compute S_step1 which indicate pixels' relevance to boundaries (background)\
\
	step_4: calculate S_step2 indicating foreground saliency (in super pixel), which serves as the seeds for step5 of random walk ranking.\
\
	step_5: random walking ranking for the final saliency map.\
\
	main: integrate step_1~step_5\
\
	output: tune parameter and output the final image\
\
4 functions:\
	\
	meanLab: calculate Lab mean value within each super pixel\
\
	histo_rgb: histogram colors in each superpixel (3 channels)\
\
	connectionMtr: calculate the connection matrix between super pixel nodes according to rules described in the paper\
\
	re_arrange: old Laplacian matrix there\'92s no order; use this function to order the matrix where seeds and unknowns are grouped individually\
\
\
2. How to make it run\
\
First, vl_slic.m is needed to be added to the path.\
\
Then, copy the image you want to detect to the same folder of my codes, and name it \'93input.jpg\'94. Noted that the image should be of obvious saliency feature and small size. (no more than 150*150 can run on my 16 GB laptop)\
\
 Run \'93main\'94. After about 5 mins, a plot will show. According to plot, tune the ADJUST_HIGH and ADJUST_LOW to normalize the brightness.\
\
Finally, run \'93output\'94, and the saliency map will show.\

\f1 \

\f0 \
}